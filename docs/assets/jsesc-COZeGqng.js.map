{"version":3,"file":"jsesc-COZeGqng.js","sources":["../../node_modules/jsesc/jsesc.js"],"sourcesContent":["'use strict';\n\nconst object = {};\nconst hasOwnProperty = object.hasOwnProperty;\nconst forOwn = (object, callback) => {\n\tfor (const key in object) {\n\t\tif (hasOwnProperty.call(object, key)) {\n\t\t\tcallback(key, object[key]);\n\t\t}\n\t}\n};\n\nconst extend = (destination, source) => {\n\tif (!source) {\n\t\treturn destination;\n\t}\n\tforOwn(source, (key, value) => {\n\t\tdestination[key] = value;\n\t});\n\treturn destination;\n};\n\nconst forEach = (array, callback) => {\n\tconst length = array.length;\n\tlet index = -1;\n\twhile (++index < length) {\n\t\tcallback(array[index]);\n\t}\n};\n\nconst fourHexEscape = (hex) => {\n\treturn '\\\\u' + ('0000' + hex).slice(-4);\n}\n\nconst hexadecimal = (code, lowercase) => {\n\tlet hexadecimal = code.toString(16);\n\tif (lowercase) return hexadecimal;\n\treturn hexadecimal.toUpperCase();\n};\n\nconst toString = object.toString;\nconst isArray = Array.isArray;\nconst isBuffer = (value) => {\n\treturn typeof Buffer === 'function' && Buffer.isBuffer(value);\n};\nconst isObject = (value) => {\n\t// This is a very simple check, but it’s good enough for what we need.\n\treturn toString.call(value) == '[object Object]';\n};\nconst isString = (value) => {\n\treturn typeof value == 'string' ||\n\t\ttoString.call(value) == '[object String]';\n};\nconst isNumber = (value) => {\n\treturn typeof value == 'number' ||\n\t\ttoString.call(value) == '[object Number]';\n};\nconst isBigInt = (value) => {\n  return typeof value == 'bigint';\n};\nconst isFunction = (value) => {\n\treturn typeof value == 'function';\n};\nconst isMap = (value) => {\n\treturn toString.call(value) == '[object Map]';\n};\nconst isSet = (value) => {\n\treturn toString.call(value) == '[object Set]';\n};\n\n/*--------------------------------------------------------------------------*/\n\n// https://mathiasbynens.be/notes/javascript-escapes#single\nconst singleEscapes = {\n\t'\\\\': '\\\\\\\\',\n\t'\\b': '\\\\b',\n\t'\\f': '\\\\f',\n\t'\\n': '\\\\n',\n\t'\\r': '\\\\r',\n\t'\\t': '\\\\t'\n\t// `\\v` is omitted intentionally, because in IE < 9, '\\v' == 'v'.\n\t// '\\v': '\\\\x0B'\n};\nconst regexSingleEscape = /[\\\\\\b\\f\\n\\r\\t]/;\n\nconst regexDigit = /[0-9]/;\nconst regexWhitespace = /[\\xA0\\u1680\\u2000-\\u200A\\u2028\\u2029\\u202F\\u205F\\u3000]/;\n\nconst escapeEverythingRegex = /([\\uD800-\\uDBFF][\\uDC00-\\uDFFF])|([\\uD800-\\uDFFF])|(['\"`])|[^]/g;\nconst escapeNonAsciiRegex = /([\\uD800-\\uDBFF][\\uDC00-\\uDFFF])|([\\uD800-\\uDFFF])|(['\"`])|[^ !#-&\\(-\\[\\]-_a-~]/g;\n\nconst jsesc = (argument, options) => {\n\tconst increaseIndentation = () => {\n\t\toldIndent = indent;\n\t\t++options.indentLevel;\n\t\tindent = options.indent.repeat(options.indentLevel)\n\t};\n\t// Handle options\n\tconst defaults = {\n\t\t'escapeEverything': false,\n\t\t'minimal': false,\n\t\t'isScriptContext': false,\n\t\t'quotes': 'single',\n\t\t'wrap': false,\n\t\t'es6': false,\n\t\t'json': false,\n\t\t'compact': true,\n\t\t'lowercaseHex': false,\n\t\t'numbers': 'decimal',\n\t\t'indent': '\\t',\n\t\t'indentLevel': 0,\n\t\t'__inline1__': false,\n\t\t'__inline2__': false\n\t};\n\tconst json = options && options.json;\n\tif (json) {\n\t\tdefaults.quotes = 'double';\n\t\tdefaults.wrap = true;\n\t}\n\toptions = extend(defaults, options);\n\tif (\n\t\toptions.quotes != 'single' &&\n\t\toptions.quotes != 'double' &&\n\t\toptions.quotes != 'backtick'\n\t) {\n\t\toptions.quotes = 'single';\n\t}\n\tconst quote = options.quotes == 'double' ?\n\t\t'\"' :\n\t\t(options.quotes == 'backtick' ?\n\t\t\t'`' :\n\t\t\t'\\''\n\t\t);\n\tconst compact = options.compact;\n\tconst lowercaseHex = options.lowercaseHex;\n\tlet indent = options.indent.repeat(options.indentLevel);\n\tlet oldIndent = '';\n\tconst inline1 = options.__inline1__;\n\tconst inline2 = options.__inline2__;\n\tconst newLine = compact ? '' : '\\n';\n\tlet result;\n\tlet isEmpty = true;\n\tconst useBinNumbers = options.numbers == 'binary';\n\tconst useOctNumbers = options.numbers == 'octal';\n\tconst useDecNumbers = options.numbers == 'decimal';\n\tconst useHexNumbers = options.numbers == 'hexadecimal';\n\n\tif (json && argument && isFunction(argument.toJSON)) {\n\t\targument = argument.toJSON();\n\t}\n\n\tif (!isString(argument)) {\n\t\tif (isMap(argument)) {\n\t\t\tif (argument.size == 0) {\n\t\t\t\treturn 'new Map()';\n\t\t\t}\n\t\t\tif (!compact) {\n\t\t\t\toptions.__inline1__ = true;\n\t\t\t\toptions.__inline2__ = false;\n\t\t\t}\n\t\t\treturn 'new Map(' + jsesc(Array.from(argument), options) + ')';\n\t\t}\n\t\tif (isSet(argument)) {\n\t\t\tif (argument.size == 0) {\n\t\t\t\treturn 'new Set()';\n\t\t\t}\n\t\t\treturn 'new Set(' + jsesc(Array.from(argument), options) + ')';\n\t\t}\n\t\tif (isBuffer(argument)) {\n\t\t\tif (argument.length == 0) {\n\t\t\t\treturn 'Buffer.from([])';\n\t\t\t}\n\t\t\treturn 'Buffer.from(' + jsesc(Array.from(argument), options) + ')';\n\t\t}\n\t\tif (isArray(argument)) {\n\t\t\tresult = [];\n\t\t\toptions.wrap = true;\n\t\t\tif (inline1) {\n\t\t\t\toptions.__inline1__ = false;\n\t\t\t\toptions.__inline2__ = true;\n\t\t\t}\n\t\t\tif (!inline2) {\n\t\t\t\tincreaseIndentation();\n\t\t\t}\n\t\t\tforEach(argument, (value) => {\n\t\t\t\tisEmpty = false;\n\t\t\t\tif (inline2) {\n\t\t\t\t\toptions.__inline2__ = false;\n\t\t\t\t}\n\t\t\t\tresult.push(\n\t\t\t\t\t(compact || inline2 ? '' : indent) +\n\t\t\t\t\tjsesc(value, options)\n\t\t\t\t);\n\t\t\t});\n\t\t\tif (isEmpty) {\n\t\t\t\treturn '[]';\n\t\t\t}\n\t\t\tif (inline2) {\n\t\t\t\treturn '[' + result.join(', ') + ']';\n\t\t\t}\n\t\t\treturn '[' + newLine + result.join(',' + newLine) + newLine +\n\t\t\t\t(compact ? '' : oldIndent) + ']';\n\t\t} else if (isNumber(argument) || isBigInt(argument)) {\n\t\t\tif (json) {\n\t\t\t\t// Some number values (e.g. `Infinity`) cannot be represented in JSON.\n\t\t\t\t// `BigInt` values less than `-Number.MAX_VALUE` or greater than\n        // `Number.MAX_VALUE` cannot be represented in JSON so they will become\n        // `-Infinity` or `Infinity`, respectively, and then become `null` when\n        // stringified.\n\t\t\t\treturn JSON.stringify(Number(argument));\n\t\t\t}\n\n      let result;\n\t\t\tif (useDecNumbers) {\n\t\t\t\tresult = String(argument);\n\t\t\t} else if (useHexNumbers) {\n\t\t\t\tlet hexadecimal = argument.toString(16);\n\t\t\t\tif (!lowercaseHex) {\n\t\t\t\t\thexadecimal = hexadecimal.toUpperCase();\n\t\t\t\t}\n\t\t\t\tresult = '0x' + hexadecimal;\n\t\t\t} else if (useBinNumbers) {\n\t\t\t\tresult = '0b' + argument.toString(2);\n\t\t\t} else if (useOctNumbers) {\n\t\t\t\tresult = '0o' + argument.toString(8);\n\t\t\t}\n\n      if (isBigInt(argument)) {\n        return result + 'n';\n      }\n      return result;\n\t\t} else if (isBigInt(argument)) {\n\t\t\tif (json) {\n\t\t\t\t// `BigInt` values less than `-Number.MAX_VALUE` or greater than\n        // `Number.MAX_VALUE` will become `-Infinity` or `Infinity`,\n        // respectively, and cannot be represented in JSON.\n\t\t\t\treturn JSON.stringify(Number(argument));\n\t\t\t}\n      return argument + 'n';\n    } else if (!isObject(argument)) {\n\t\t\tif (json) {\n\t\t\t\t// For some values (e.g. `undefined`, `function` objects),\n\t\t\t\t// `JSON.stringify(value)` returns `undefined` (which isn’t valid\n\t\t\t\t// JSON) instead of `'null'`.\n\t\t\t\treturn JSON.stringify(argument) || 'null';\n\t\t\t}\n\t\t\treturn String(argument);\n\t\t} else { // it’s an object\n\t\t\tresult = [];\n\t\t\toptions.wrap = true;\n\t\t\tincreaseIndentation();\n\t\t\tforOwn(argument, (key, value) => {\n\t\t\t\tisEmpty = false;\n\t\t\t\tresult.push(\n\t\t\t\t\t(compact ? '' : indent) +\n\t\t\t\t\tjsesc(key, options) + ':' +\n\t\t\t\t\t(compact ? '' : ' ') +\n\t\t\t\t\tjsesc(value, options)\n\t\t\t\t);\n\t\t\t});\n\t\t\tif (isEmpty) {\n\t\t\t\treturn '{}';\n\t\t\t}\n\t\t\treturn '{' + newLine + result.join(',' + newLine) + newLine +\n\t\t\t\t(compact ? '' : oldIndent) + '}';\n\t\t}\n\t}\n\n\tconst regex = options.escapeEverything ? escapeEverythingRegex : escapeNonAsciiRegex;\n\tresult = argument.replace(regex, (char, pair, lone, quoteChar, index, string) => {\n\t\tif (pair) {\n\t\t\tif (options.minimal) return pair;\n\t\t\tconst first = pair.charCodeAt(0);\n\t\t\tconst second = pair.charCodeAt(1);\n\t\t\tif (options.es6) {\n\t\t\t\t// https://mathiasbynens.be/notes/javascript-encoding#surrogate-formulae\n\t\t\t\tconst codePoint = (first - 0xD800) * 0x400 + second - 0xDC00 + 0x10000;\n\t\t\t\tconst hex = hexadecimal(codePoint, lowercaseHex);\n\t\t\t\treturn '\\\\u{' + hex + '}';\n\t\t\t}\n\t\t\treturn fourHexEscape(hexadecimal(first, lowercaseHex)) + fourHexEscape(hexadecimal(second, lowercaseHex));\n\t\t}\n\n\t\tif (lone) {\n\t\t\treturn fourHexEscape(hexadecimal(lone.charCodeAt(0), lowercaseHex));\n\t\t}\n\n\t\tif (\n\t\t\tchar == '\\0' &&\n\t\t\t!json &&\n\t\t\t!regexDigit.test(string.charAt(index + 1))\n\t\t) {\n\t\t\treturn '\\\\0';\n\t\t}\n\n\t\tif (quoteChar) {\n\t\t\tif (quoteChar == quote || options.escapeEverything) {\n\t\t\t\treturn '\\\\' + quoteChar;\n\t\t\t}\n\t\t\treturn quoteChar;\n\t\t}\n\n\t\tif (regexSingleEscape.test(char)) {\n\t\t\t// no need for a `hasOwnProperty` check here\n\t\t\treturn singleEscapes[char];\n\t\t}\n\n\t\tif (options.minimal && !regexWhitespace.test(char)) {\n\t\t\treturn char;\n\t\t}\n\n\t\tconst hex = hexadecimal(char.charCodeAt(0), lowercaseHex);\n\t\tif (json || hex.length > 2) {\n\t\t\treturn fourHexEscape(hex);\n\t\t}\n\n\t\treturn '\\\\x' + ('00' + hex).slice(-2);\n\t});\n\n\tif (quote == '`') {\n\t\tresult = result.replace(/\\$\\{/g, '\\\\${');\n\t}\n\tif (options.isScriptContext) {\n\t\t// https://mathiasbynens.be/notes/etago\n\t\tresult = result\n\t\t\t.replace(/<\\/(script|style)/gi, '<\\\\/$1')\n\t\t\t.replace(/<!--/g, json ? '\\\\u003C!--' : '\\\\x3C!--');\n\t}\n\tif (options.wrap) {\n\t\tresult = quote + result + quote;\n\t}\n\treturn result;\n};\n\njsesc.version = '3.0.2';\n\nmodule.exports = jsesc;\n"],"names":["object","hexadecimal","result"],"mappings":"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","x_google_ignoreList":[0]}