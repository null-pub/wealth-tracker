var __defProp=Object.defineProperty;var __name=(target,value)=>__defProp(target,"name",{value,configurable:!0});function numericSort(x){return x.slice().sort(function(a,b){return a-b})}__name(numericSort,"numericSort");function makeMatrix(columns,rows){for(var matrix=[],i=0;i<columns;i++){for(var column=[],j=0;j<rows;j++)column.push(0);matrix.push(column)}return matrix}__name(makeMatrix,"makeMatrix");function uniqueCountSorted(x){for(var uniqueValueCount=0,lastSeenValue,i=0;i<x.length;i++)(i===0||x[i]!==lastSeenValue)&&(lastSeenValue=x[i],uniqueValueCount++);return uniqueValueCount}__name(uniqueCountSorted,"uniqueCountSorted");function ssq(j,i,sums,sumsOfSquares){var sji;if(j>0){var muji=(sums[i]-sums[j-1])/(i-j+1);sji=sumsOfSquares[i]-sumsOfSquares[j-1]-(i-j+1)*muji*muji}else sji=sumsOfSquares[i]-sums[i]*sums[i]/(i+1);return sji<0?0:sji}__name(ssq,"ssq");function fillMatrixColumn(iMin,iMax,cluster,matrix,backtrackMatrix,sums,sumsOfSquares){if(!(iMin>iMax)){var i=Math.floor((iMin+iMax)/2);matrix[cluster][i]=matrix[cluster-1][i-1],backtrackMatrix[cluster][i]=i;var jlow=cluster;iMin>cluster&&(jlow=Math.max(jlow,backtrackMatrix[cluster][iMin-1]||0)),jlow=Math.max(jlow,backtrackMatrix[cluster-1][i]||0);var jhigh=i-1;iMax<matrix[0].length-1&&(jhigh=Math.min(jhigh,backtrackMatrix[cluster][iMax+1]||0));for(var sji,sjlowi,ssqjlow,ssqj,j=jhigh;j>=jlow&&(sji=ssq(j,i,sums,sumsOfSquares),!(sji+matrix[cluster-1][jlow-1]>=matrix[cluster][i]));--j)sjlowi=ssq(jlow,i,sums,sumsOfSquares),ssqjlow=sjlowi+matrix[cluster-1][jlow-1],ssqjlow<matrix[cluster][i]&&(matrix[cluster][i]=ssqjlow,backtrackMatrix[cluster][i]=jlow),jlow++,ssqj=sji+matrix[cluster-1][j-1],ssqj<matrix[cluster][i]&&(matrix[cluster][i]=ssqj,backtrackMatrix[cluster][i]=j);fillMatrixColumn(iMin,i-1,cluster,matrix,backtrackMatrix,sums,sumsOfSquares),fillMatrixColumn(i+1,iMax,cluster,matrix,backtrackMatrix,sums,sumsOfSquares)}}__name(fillMatrixColumn,"fillMatrixColumn");function fillMatrices(data,matrix,backtrackMatrix){for(var nValues=matrix[0].length,shift=data[Math.floor(nValues/2)],sums=[],sumsOfSquares=[],i=0,shiftedValue=void 0;i<nValues;++i)shiftedValue=data[i]-shift,i===0?(sums.push(shiftedValue),sumsOfSquares.push(shiftedValue*shiftedValue)):(sums.push(sums[i-1]+shiftedValue),sumsOfSquares.push(sumsOfSquares[i-1]+shiftedValue*shiftedValue)),matrix[0][i]=ssq(0,i,sums,sumsOfSquares),backtrackMatrix[0][i]=0;for(var iMin,cluster=1;cluster<matrix.length;++cluster)cluster<matrix.length-1?iMin=cluster:iMin=nValues-1,fillMatrixColumn(iMin,nValues-1,cluster,matrix,backtrackMatrix,sums,sumsOfSquares)}__name(fillMatrices,"fillMatrices");function ckmeans(x,nClusters){if(nClusters>x.length)throw new Error("cannot generate more classes than there are data values");var sorted=numericSort(x),uniqueCount=uniqueCountSorted(sorted);if(uniqueCount===1)return[sorted];var matrix=makeMatrix(nClusters,sorted.length),backtrackMatrix=makeMatrix(nClusters,sorted.length);fillMatrices(sorted,matrix,backtrackMatrix);for(var clusters=[],clusterRight=backtrackMatrix[0].length-1,cluster=backtrackMatrix.length-1;cluster>=0;cluster--){var clusterLeft=backtrackMatrix[cluster][clusterRight];clusters[cluster]=sorted.slice(clusterLeft,clusterRight+1),cluster>0&&(clusterRight=clusterLeft-1)}return clusters}__name(ckmeans,"ckmeans");export{ckmeans as c};
//# sourceMappingURL=simple-statistics-nD5U36C2.js.map
