var __defProp=Object.defineProperty;var __name=(target,value)=>__defProp(target,"name",{value,configurable:!0});var jsesc_1,hasRequiredJsesc;function requireJsesc(){if(hasRequiredJsesc)return jsesc_1;hasRequiredJsesc=1;const object={},hasOwnProperty=object.hasOwnProperty,forOwn=__name((object2,callback)=>{for(const key in object2)hasOwnProperty.call(object2,key)&&callback(key,object2[key])},"forOwn"),extend=__name((destination,source)=>(source&&forOwn(source,(key,value)=>{destination[key]=value}),destination),"extend"),forEach=__name((array,callback)=>{const length=array.length;let index=-1;for(;++index<length;)callback(array[index])},"forEach"),fourHexEscape=__name(hex=>"\\u"+("0000"+hex).slice(-4),"fourHexEscape"),hexadecimal=__name((code,lowercase)=>{let hexadecimal2=code.toString(16);return lowercase?hexadecimal2:hexadecimal2.toUpperCase()},"hexadecimal"),toString=object.toString,isArray=Array.isArray,isBuffer=__name(value=>typeof Buffer=="function"&&Buffer.isBuffer(value),"isBuffer"),isObject=__name(value=>toString.call(value)=="[object Object]","isObject"),isString=__name(value=>typeof value=="string"||toString.call(value)=="[object String]","isString"),isNumber=__name(value=>typeof value=="number"||toString.call(value)=="[object Number]","isNumber"),isBigInt=__name(value=>typeof value=="bigint","isBigInt"),isFunction=__name(value=>typeof value=="function","isFunction"),isMap=__name(value=>toString.call(value)=="[object Map]","isMap"),isSet=__name(value=>toString.call(value)=="[object Set]","isSet"),singleEscapes={"\\":"\\\\","\b":"\\b","\f":"\\f","\n":"\\n","\r":"\\r","	":"\\t"},regexSingleEscape=/[\\\b\f\n\r\t]/,regexDigit=/[0-9]/,regexWhitespace=/[\xA0\u1680\u2000-\u200A\u2028\u2029\u202F\u205F\u3000]/,escapeEverythingRegex=/([\uD800-\uDBFF][\uDC00-\uDFFF])|([\uD800-\uDFFF])|(['"`])|[^]/g,escapeNonAsciiRegex=/([\uD800-\uDBFF][\uDC00-\uDFFF])|([\uD800-\uDFFF])|(['"`])|[^ !#-&\(-\[\]-_a-~]/g,jsesc=__name((argument,options)=>{const increaseIndentation=__name(()=>{oldIndent=indent,++options.indentLevel,indent=options.indent.repeat(options.indentLevel)},"increaseIndentation"),defaults={escapeEverything:!1,minimal:!1,isScriptContext:!1,quotes:"single",wrap:!1,es6:!1,json:!1,compact:!0,lowercaseHex:!1,numbers:"decimal",indent:"	",indentLevel:0,__inline1__:!1,__inline2__:!1},json=options&&options.json;json&&(defaults.quotes="double",defaults.wrap=!0),options=extend(defaults,options),options.quotes!="single"&&options.quotes!="double"&&options.quotes!="backtick"&&(options.quotes="single");const quote=options.quotes=="double"?'"':options.quotes=="backtick"?"`":"'",compact=options.compact,lowercaseHex=options.lowercaseHex;let indent=options.indent.repeat(options.indentLevel),oldIndent="";const inline1=options.__inline1__,inline2=options.__inline2__,newLine=compact?"":`
`;let result,isEmpty=!0;const useBinNumbers=options.numbers=="binary",useOctNumbers=options.numbers=="octal",useDecNumbers=options.numbers=="decimal",useHexNumbers=options.numbers=="hexadecimal";if(json&&argument&&isFunction(argument.toJSON)&&(argument=argument.toJSON()),!isString(argument)){if(isMap(argument))return argument.size==0?"new Map()":(compact||(options.__inline1__=!0,options.__inline2__=!1),"new Map("+jsesc(Array.from(argument),options)+")");if(isSet(argument))return argument.size==0?"new Set()":"new Set("+jsesc(Array.from(argument),options)+")";if(isBuffer(argument))return argument.length==0?"Buffer.from([])":"Buffer.from("+jsesc(Array.from(argument),options)+")";if(isArray(argument))return result=[],options.wrap=!0,inline1&&(options.__inline1__=!1,options.__inline2__=!0),inline2||increaseIndentation(),forEach(argument,value=>{isEmpty=!1,inline2&&(options.__inline2__=!1),result.push((compact||inline2?"":indent)+jsesc(value,options))}),isEmpty?"[]":inline2?"["+result.join(", ")+"]":"["+newLine+result.join(","+newLine)+newLine+(compact?"":oldIndent)+"]";if(isNumber(argument)||isBigInt(argument)){if(json)return JSON.stringify(Number(argument));let result2;if(useDecNumbers)result2=String(argument);else if(useHexNumbers){let hexadecimal2=argument.toString(16);lowercaseHex||(hexadecimal2=hexadecimal2.toUpperCase()),result2="0x"+hexadecimal2}else useBinNumbers?result2="0b"+argument.toString(2):useOctNumbers&&(result2="0o"+argument.toString(8));return isBigInt(argument)?result2+"n":result2}else return isBigInt(argument)?json?JSON.stringify(Number(argument)):argument+"n":isObject(argument)?(result=[],options.wrap=!0,increaseIndentation(),forOwn(argument,(key,value)=>{isEmpty=!1,result.push((compact?"":indent)+jsesc(key,options)+":"+(compact?"":" ")+jsesc(value,options))}),isEmpty?"{}":"{"+newLine+result.join(","+newLine)+newLine+(compact?"":oldIndent)+"}"):json?JSON.stringify(argument)||"null":String(argument)}const regex=options.escapeEverything?escapeEverythingRegex:escapeNonAsciiRegex;return result=argument.replace(regex,(char,pair,lone,quoteChar,index,string)=>{if(pair){if(options.minimal)return pair;const first=pair.charCodeAt(0),second=pair.charCodeAt(1);if(options.es6){const codePoint=(first-55296)*1024+second-56320+65536;return"\\u{"+hexadecimal(codePoint,lowercaseHex)+"}"}return fourHexEscape(hexadecimal(first,lowercaseHex))+fourHexEscape(hexadecimal(second,lowercaseHex))}if(lone)return fourHexEscape(hexadecimal(lone.charCodeAt(0),lowercaseHex));if(char=="\0"&&!json&&!regexDigit.test(string.charAt(index+1)))return"\\0";if(quoteChar)return quoteChar==quote||options.escapeEverything?"\\"+quoteChar:quoteChar;if(regexSingleEscape.test(char))return singleEscapes[char];if(options.minimal&&!regexWhitespace.test(char))return char;const hex=hexadecimal(char.charCodeAt(0),lowercaseHex);return json||hex.length>2?fourHexEscape(hex):"\\x"+("00"+hex).slice(-2)}),quote=="`"&&(result=result.replace(/\$\{/g,"\\${")),options.isScriptContext&&(result=result.replace(/<\/(script|style)/gi,"<\\/$1").replace(/<!--/g,json?"\\u003C!--":"\\x3C!--")),options.wrap&&(result=quote+result+quote),result},"jsesc");return jsesc.version="3.0.2",jsesc_1=jsesc,jsesc_1}__name(requireJsesc,"requireJsesc");requireJsesc();
//# sourceMappingURL=jsesc-COZeGqng.js.map
